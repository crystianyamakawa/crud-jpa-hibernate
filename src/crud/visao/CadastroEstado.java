/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crud.visao;

import crud.App;
import crud.dao.EstadoDAO;
import crud.modelo.Banco;

import java.awt.List;
import java.sql.SQLException;

import javax.swing.JOptionPane;



/**
 *
 * @author Willian} catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
 */
public class CadastroEstado extends javax.swing.JFrame {

    /**
     * Creates new form CadastroEstado
     */
    public CadastroEstado() {
        initComponents();
        atualizarListaEstados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoSigla = new javax.swing.JTextField();
        botaoIncluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        painelEstados = new javax.swing.JTextPane();
        Alterar = new javax.swing.JButton();
        campoId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Consulta = new javax.swing.JButton();
        excluir = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro Estados");

        jLabel1.setText("Nome:");

        jLabel2.setText("Sigla:");

        botaoIncluir.setText("Incluir");
        botaoIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoIncluirActionPerformed(evt);
            }
        });

        painelEstados.setEditable(false);
        jScrollPane1.setViewportView(painelEstados);

        Alterar.setText("Alterar");
        Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlterarActionPerformed(evt);
            }
        });

        campoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIdActionPerformed(evt);
            }
        });

        jLabel3.setText("Id");

        Consulta.setText("Consulta");
        Consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultaActionPerformed(evt);
            }
        });

        excluir.setText("Excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Consulta)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(campoNome)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoSigla, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botaoIncluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Alterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(excluir))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(Consulta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoSigla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoIncluir)
                    .addComponent(Alterar)
                    .addComponent(excluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoIncluirActionPerformed

    	if (campoNome.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um nome para incluir", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	if (campoSigla.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar uma sigla para incluir", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
    	try {
    	    EstadoDAO dao = new EstadoDAO();
   		  	dao.addEstado(campoSigla.getText(), campoNome.getText());
    		}
   		  	catch (SQLException e) {
   		  		
            	JOptionPane.showMessageDialog(null,"Verifique os dados informado!", "Erro de Operação", getDefaultCloseOperation());
            }
    		finally {
                atualizarListaEstados();
    		}
    	    
            
    }//GEN-LAST:event_botaoIncluirActionPerformed

    private void AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlterarActionPerformed

    	if (campoId.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id para alterar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
    
    	if (campoNome.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um nome para alterar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
 
       	if (campoSigla.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar uma sigla para alterar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
 
       	try {
       		EstadoDAO dao = new EstadoDAO();
       		dao.updateEstado(campoSigla.getText(), campoNome.getText(), campoId.getText());
       		}
	  	catch (SQLException  e) {
   		  		
            	JOptionPane.showMessageDialog(null,"Verifique os dados informado!", "Erro de Operação", getDefaultCloseOperation());
       		
       	}
       	finally {
       		atualizarListaEstados();
       	}	
    }//GEN-LAST:event_AlterarActionPerformed

    private void campoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoIdActionPerformed

    private void ConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultaActionPerformed
    	if (campoId.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id para consultar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
       	if (!App.isNumeric(campoId.getText())) {
    		JOptionPane.showMessageDialog(null, "Informar um id valido", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
   	
    	EstadoDAO dao = new EstadoDAO();
       	List ls = dao.getEstado(campoId.getText());
        campoId.setText(ls.getItem(0));
        campoSigla.setText(ls.getItem(1));
        campoNome.setText(ls.getItem(2));
  
    }//GEN-LAST:event_ConsultaActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
 
       	if (campoId.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id para excluir", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
       	if (!App.isNumeric(campoId.getText())) {
    		JOptionPane.showMessageDialog(null, "Informar um id valido", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
       	
       	EstadoDAO dao = new EstadoDAO();
       	 
       	dao.delEstado(campoId.getText());
        atualizarListaEstados();
    }//GEN-LAST:event_excluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroEstado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alterar;
    private javax.swing.JButton Consulta;
    private javax.swing.JButton botaoIncluir;
    private javax.swing.JTextField campoId;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoSigla;
    private javax.swing.JButton excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane painelEstados;
    // End of variables declaration//GEN-END:variables

    
    private void atualizarListaEstados() {
        try {
        	EstadoDAO dao = new EstadoDAO();
        	List ls = dao.getEstados();
         	String lsEstados = "";
        	for (int i = 0; i < ls.countItems(); i++)  {
                lsEstados += ls.getItem(i) + "\n";
            }
            painelEstados.setText(lsEstados);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
