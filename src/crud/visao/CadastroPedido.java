/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crud.visao;

import java.awt.List;
import java.sql.SQLException;

import javax.swing.JOptionPane;

import crud.App;
import crud.dao.EstadoDAO;
import crud.dao.PedidoDAO;
import crud.dao.PedidoItemDAO;
import crud.dao.PessoaDAO;
import crud.dao.ProdutoDAO;

/**
 *
 * @author crystian
 */
public class CadastroPedido extends javax.swing.JFrame {

    /**
     * Creates new form CadastroPedido
     */
    public CadastroPedido() {
        initComponents();
        atualizarListaPedidos();
        preencherComboClientes();
        preencherComboProdutos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campoIdPedido = new javax.swing.JTextField();
        btConsultar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        campoCliente = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        campoData = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        campoValor = new javax.swing.JTextField();
        btIncluirPedido = new javax.swing.JButton();
        btAlterarPedido = new javax.swing.JButton();
        btExcluirPedido = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btIncluirItem = new javax.swing.JButton();
        btAlterarItem = new javax.swing.JButton();
        btExcluirItem = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        campoIdItem = new javax.swing.JTextField();
        btConsultarItem = new javax.swing.JButton();
        campoProduto = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        campoQtd = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        campoValorItem = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        painelItens = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        painelPedidos = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Pedidos");
        setBackground(new java.awt.Color(54, 33, 33));

        jLabel1.setText("Id");

        campoIdPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIdPedidoActionPerformed(evt);
            }
        });

        btConsultar.setText("Consultar");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente");

        campoCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        jLabel3.setText("Data");

        jLabel4.setText("Valor Pedido");

        btIncluirPedido.setText("Incluir");
        btIncluirPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirPedidoActionPerformed(evt);
            }
        });

        btAlterarPedido.setText("Alterar");
        btAlterarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarPedidoActionPerformed(evt);
            }
        });

        btExcluirPedido.setText("Excluir");
        btExcluirPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirPedidoActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btIncluirItem.setText("Incluir");
        btIncluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirItemActionPerformed(evt);
            }
        });

        btAlterarItem.setText("Alterar");
        btAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarItemActionPerformed(evt);
            }
        });

        btExcluirItem.setText("Excluir");
        btExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirItemActionPerformed(evt);
            }
        });

        jLabel5.setText("Id");

        campoIdItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIdItemActionPerformed(evt);
            }
        });

        btConsultarItem.setText("Consultar");
        btConsultarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarItemActionPerformed(evt);
            }
        });

        campoProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));

        jLabel6.setText("Produto");

        jLabel7.setText("Quantidade");

        campoQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoQtdActionPerformed(evt);
            }
        });

        jLabel8.setText("Valor Item");

        campoValorItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoValorItemActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel9.setText("Itens do Pedido");

        jLabel10.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel10.setText("Dados do Pedido");

        painelItens.setEditable(false);
        jScrollPane1.setViewportView(painelItens);

        painelPedidos.setEditable(false);
        jScrollPane2.setViewportView(painelPedidos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3))
                                        .addGap(21, 21, 21))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(campoData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(campoIdPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btConsultar))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(42, 42, 42)
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(campoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(campoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btIncluirPedido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btAlterarPedido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btExcluirPedido)))
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 227, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(campoIdItem, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btConsultarItem))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(campoQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoValorItem, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(campoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btIncluirItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btAlterarItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btExcluirItem)))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(campoIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btConsultar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(campoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btIncluirPedido)
                                    .addComponent(btAlterarPedido)
                                    .addComponent(btExcluirPedido)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(campoIdItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btConsultarItem))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(campoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campoQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(campoValorItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btIncluirItem)
                                    .addComponent(btAlterarItem)
                                    .addComponent(btExcluirItem))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoIdPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIdPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoIdPedidoActionPerformed

    private void campoIdItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIdItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoIdItemActionPerformed

    private void campoQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoQtdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoQtdActionPerformed

    private void campoValorItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoValorItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoValorItemActionPerformed

    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
        // TODO add your handling code here:
    	 // TODO add your handling code here:
    	if (campoIdPedido.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id para consultar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
       	if (!App.isNumeric(campoIdPedido.getText())) {
    		JOptionPane.showMessageDialog(null, "Informar um id valido", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
   	
    	PedidoDAO dao = new PedidoDAO();
       	List ls = dao.getPedido(campoIdPedido.getText());
       	campoIdPedido.setText(ls.getItem(0));
        campoData.setText(ls.getItem(1));
        campoCliente.setSelectedItem(ls.getItem(2));
        campoValor.setText(ls.getItem(3));
        atualizarListaItens();  
    	
    	
    	
    }//GEN-LAST:event_btConsultarActionPerformed

    private void btIncluirPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirPedidoActionPerformed
        // TODO add your handling code here:
    	if (campoData.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar uma data (DD/MM/YYYY) para incluir", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	if (campoValor.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um VALOR para incluir", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
    	try {
    	    PedidoDAO dao = new PedidoDAO();
   		  	dao.addPedido(campoData.getText(), campoCliente.getSelectedItem().toString(), Float.parseFloat(campoValor.getText()));
    		}
   		  	catch (Exception e) {
   		  		
            	JOptionPane.showMessageDialog(null,"Verifique os dados informado!", "Erro de Operação", getDefaultCloseOperation());
            }
    		finally {
                atualizarListaPedidos();
                atualizarListaItens();
                
    		}
    	    
    	
    }//GEN-LAST:event_btIncluirPedidoActionPerformed

    private void btAlterarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarPedidoActionPerformed
        // TODO add your handling code here:
    	
    	 // TODO add your handling code here:
    	if (campoIdPedido.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id Pedido para consultar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
       	if (!App.isNumeric(campoIdPedido.getText())) {
    		JOptionPane.showMessageDialog(null, "Informar um id Pedido valido", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
 
       	if (campoData.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar uma Data para alterar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
       	
       	try {
       		PedidoDAO dao = new PedidoDAO();
            dao.updatePedido( campoData.getText(),campoCliente.getSelectedItem().toString(), Float.parseFloat(campoValor.getText()) ,campoIdPedido.getText());
       	}
    	catch (Exception e) {
          	JOptionPane.showMessageDialog(null,"Verifique os dados informado!", "Erro de Operação", getDefaultCloseOperation());
       		
       	}
       	finally {
            atualizarListaPedidos();
            atualizarListaItens();
       	}	
    	
    }//GEN-LAST:event_btAlterarPedidoActionPerformed

    private void btExcluirPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirPedidoActionPerformed
        // TODO add your handling code here:
    	if (campoIdPedido.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id Pedido para excluir", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
       	if (!App.isNumeric(campoIdPedido.getText())) {
    		JOptionPane.showMessageDialog(null, "Informar um id Pedido valido", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
       	
       	PedidoDAO dao = new PedidoDAO();
       	 
       	dao.delPedido(campoIdPedido.getText());
        atualizarListaPedidos();
        atualizarListaItens();
        
    }//GEN-LAST:event_btExcluirPedidoActionPerformed

    private void btConsultarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarItemActionPerformed
    
    	if (campoIdItem.getText().isEmpty()) {
   		JOptionPane.showMessageDialog(null, "Informar um id Item para consultar", "Erro de Operação", getDefaultCloseOperation());
   		return;
   		}
   	
    	if (!App.isNumeric(campoIdItem.getText())) {
   		JOptionPane.showMessageDialog(null, "Informar um id Item valido", "Erro de Operação", getDefaultCloseOperation());
   		return;
      	}
  	
    	PedidoItemDAO dao = new PedidoItemDAO();
      	List ls = dao.getPedidoItem(campoIdItem.getText());
      	campoIdItem.setText(ls.getItem(0));
      	campoProduto.setSelectedItem(ls.getItem(1));
        campoQtd.setText(ls.getItem(2));
        campoValorItem.setText(ls.getItem(3));
        // atualizarListaItens();  
    }//GEN-LAST:event_btConsultarItemActionPerformed

    private void btIncluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirItemActionPerformed
        // TODO add your handling code here:
    	 // TODO add your handling code here:
    	if (campoIdPedido.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id Pedido para incluir item", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
    	if (campoQtd.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar uma Quantidade de Item para incluir item", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	if (campoValorItem.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um VALOR de Item para incluir item", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
    	
    	try {
    	    PedidoItemDAO dao = new PedidoItemDAO();
   		  	dao.addPedidoItem( campoProduto.getSelectedItem().toString(), 
   		  			           Integer.parseInt(campoQtd.getText()), 
   		  			           Float.parseFloat(campoValorItem.getText()),
   		  			           campoIdPedido.getText());
    		}
   		  	catch (Exception e) {
   		  		
            	JOptionPane.showMessageDialog(null,"Verifique os dados informado!", "Erro de Operação", getDefaultCloseOperation());
            }
    		finally {
                atualizarListaItens();
                
    		}

    	
    }//GEN-LAST:event_btIncluirItemActionPerformed

    private void btAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarItemActionPerformed
       	if (campoIdItem.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id Item para consultar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
       	if (!App.isNumeric(campoIdItem.getText())) {
    		JOptionPane.showMessageDialog(null, "Informar um id Item valido", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
 
       	if (campoQtd.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar uma Quantidade para alterar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}

       	if (campoValorItem.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um Valor do Item para alterar", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
       	
       	try {
       		PedidoItemDAO dao = new PedidoItemDAO();
            dao.updatePedidoItem( campoProduto.getSelectedItem().toString(),
            				Integer.parseInt(campoQtd.getText()), 
            				Float.parseFloat(campoValorItem.getText()) ,
            				campoIdPedido.getText(),
            				campoIdItem.getText());
 
       	}
    	catch (Exception e) {
          	JOptionPane.showMessageDialog(null,"Verifique os dados informado!", "Erro de Operação", getDefaultCloseOperation());
       		
       	}
       	finally {
            atualizarListaItens();
       	}	

    }//GEN-LAST:event_btAlterarItemActionPerformed

    private void btExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirItemActionPerformed
        // TODO add your handling code here:
    	if (campoIdItem.getText().isEmpty()) {
    		JOptionPane.showMessageDialog(null, "Informar um id Item para excluir", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
    	
       	if (!App.isNumeric(campoIdItem.getText())) {
    		JOptionPane.showMessageDialog(null, "Informar um id Item valido", "Erro de Operação", getDefaultCloseOperation());
    		return;
    	}
       	
       	PedidoItemDAO dao = new PedidoItemDAO();
       	 
       	dao.delPedidoItem(campoIdItem.getText());
        atualizarListaItens();

  
    }//GEN-LAST:event_btExcluirItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroPedido().setVisible(true);
            }
        });
    }
    
    private void atualizarListaPedidos() {
        try {
        	PedidoDAO dao = new PedidoDAO();
        	List ls = dao.getPedidos();
         	String lsPedidos = "";
        	for (int i = 0; i < ls.countItems(); i++)  {
        		lsPedidos += ls.getItem(i) + "\n";
            }
            painelPedidos.setText(lsPedidos);
            List li = new List();
            painelItens.removeAll();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void atualizarListaItens() {
        try {
        	//String nls = "";
        	//painelItens.setText(nls);
        	if (!campoIdPedido.getText().isEmpty()) {
        		PedidoItemDAO dao = new PedidoItemDAO();
            	List ls = dao.getPedidoItems(campoIdPedido.getText());
             	String lsItems = "";
            	for (int i = 0; i < ls.countItems(); i++)  {
            		lsItems += ls.getItem(i) + "\n";
                }
                painelItens.setText(lsItems);
        	}
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    
    private void preencherComboClientes() {
        try {
        	 //campoCliente.removeAll();
             PessoaDAO dao = new PessoaDAO();
             List ls = dao.getComboPessoa();
             for (int i = 0; i < ls.countItems(); i++)  {
                campoCliente.addItem(ls.getItem(i));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void preencherComboProdutos() {
        try {
        	 //campoCliente.removeAll();
             ProdutoDAO dao = new ProdutoDAO();
             List ls = dao.getComboProdutos();
             for (int i = 0; i < ls.countItems(); i++)  {
                campoProduto.addItem(ls.getItem(i));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterarItem;
    private javax.swing.JButton btAlterarPedido;
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btConsultarItem;
    private javax.swing.JButton btExcluirItem;
    private javax.swing.JButton btExcluirPedido;
    private javax.swing.JButton btIncluirItem;
    private javax.swing.JButton btIncluirPedido;
    private javax.swing.JComboBox<String> campoCliente;
    private javax.swing.JTextField campoData;
    private javax.swing.JTextField campoIdItem;
    private javax.swing.JTextField campoIdPedido;
    private javax.swing.JComboBox<String> campoProduto;
    private javax.swing.JTextField campoQtd;
    private javax.swing.JTextField campoValor;
    private javax.swing.JTextField campoValorItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextPane painelItens;
    private javax.swing.JTextPane painelPedidos;
    // End of variables declaration//GEN-END:variables
    
    
}
